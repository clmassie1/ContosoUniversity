@page
@model ContosoUniversity.Pages.Students.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>
<p>
    <a class="btn btn-info" asp-page="Create">Create New</a>
</p>


<form class="form-inline mr-auto" asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <!-- Search form -->

        <p>
            Find by name: <input class="form-control mr-sm-2" type="text" placeholder="Search" aria-label="Search" name="SearchString" value="@Model.CurrentFilter" />
            <input class="btn btn-info btn-rounded btn-sm my-0" type="submit" value="Search" /> 
            <a class="btn btn-info" asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>
    <table class="table table-bordered">
        <thead class="thead-dark">
            <tr>
                <th>
                    <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                       asp-route-currentFilter="@Model.CurrentFilter">
                        @Html.DisplayNameFor(model => model.Student[0].LastName)
                    </a>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Student[0].FirstMidName)
                </th>
                <th>
                    <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort"
                       asp-route-currentFilter="@Model.CurrentFilter">
                        @Html.DisplayNameFor(model => model.Student[0].EnrollmentDate)
                    </a>
                </th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Student)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstMidName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EnrollmentDate)
                    </td>
                    <td>
                        <a class="btn btn-info" asp-page="./Edit" asp-route-id="@item.ID">Edit</a> 
                        <a class="btn btn-info" asp-page="./Details" asp-route-id="@item.ID">Details</a> 
                        <a class="btn btn-info" asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @{
        var prevDisabled = !Model.Student.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.Student.HasNextPage ? "disabled" : "";
    }

    <a asp-page="./Index"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-pageIndex="@(Model.Student.PageIndex - 1)"
       asp-route-currentFilter="@Model.CurrentFilter"
       class="btn btn-info @prevDisabled">
        Previous
    </a>
    <a asp-page="./Index"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-pageIndex="@(Model.Student.PageIndex + 1)"
       asp-route-currentFilter="@Model.CurrentFilter"
      class="btn btn-info @nextDisabled">
        Next
    </a>
